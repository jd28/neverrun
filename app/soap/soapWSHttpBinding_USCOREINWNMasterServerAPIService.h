/* soapWSHttpBinding_USCOREINWNMasterServerAPIService.h
   Generated by gSOAP 2.8.11 from NWNlist.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/
#pragma once

#ifndef soapWSHttpBinding_USCOREINWNMasterServerAPIService_H
#define soapWSHttpBinding_USCOREINWNMasterServerAPIService_H
#include "soapH.h"
class SOAP_CMAC WSHttpBinding_USCOREINWNMasterServerAPIService : public soap
{ public:
	/// Constructor
	WSHttpBinding_USCOREINWNMasterServerAPIService();
	/// Construct from another engine state
	WSHttpBinding_USCOREINWNMasterServerAPIService(const struct soap&);
	/// Constructor with engine input+output mode control
	WSHttpBinding_USCOREINWNMasterServerAPIService(soap_mode iomode);
	/// Constructor with engine input and output mode control
	WSHttpBinding_USCOREINWNMasterServerAPIService(soap_mode imode, soap_mode omode);
	/// Destructor, also frees all deserialized data
	virtual ~WSHttpBinding_USCOREINWNMasterServerAPIService();
	/// Delete all deserialized data (uses soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to defaults
	virtual	void reset();
	/// Initializer used by constructor
	virtual	void WSHttpBinding_USCOREINWNMasterServerAPIService_init(soap_mode imode, soap_mode omode);
	/// Create a copy
	virtual	WSHttpBinding_USCOREINWNMasterServerAPIService *copy() SOAP_PURE_VIRTUAL;
	/// Close connection (normally automatic)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Return sender-related fault to sender
	virtual	int soap_senderfault(const char *string, const char *detailXML);
	/// Return sender-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Return receiver-related fault to sender
	virtual	int soap_receiverfault(const char *string, const char *detailXML);
	/// Return receiver-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Run simple single-thread iterative service on port until a connection error occurs (returns error code or SOAP_OK), use this->bind_flag = SO_REUSEADDR to rebind for a rerun
	virtual	int run(int port);
	/// Bind service to port (returns master socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET bind(const char *host, int port, int backlog);
	/// Accept next request (returns socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET accept();
#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
	/// Then accept SSL handshake, when SSL is used
	virtual	int ssl_accept();
#endif
	/// Serve this request (returns error code or SOAP_OK)
	virtual	int serve();
	/// Used by serve() to dispatch a request (returns error code or SOAP_OK)
	virtual	int dispatch();

	///
	/// Service operations (you should define these):
	/// Note: compile with -DWITH_PURE_VIRTUAL for pure virtual methods
	///

	/// Web service operation 'LookupServerByName' (returns error code or SOAP_OK)
	virtual	int LookupServerByName(_ns1__LookupServerByName *ns1__LookupServerByName, _ns1__LookupServerByNameResponse *ns1__LookupServerByNameResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'LookupServerByAddress' (returns error code or SOAP_OK)
	virtual	int LookupServerByAddress(_ns1__LookupServerByAddress *ns1__LookupServerByAddress, _ns1__LookupServerByAddressResponse *ns1__LookupServerByAddressResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetOnlineServerList' (returns error code or SOAP_OK)
	virtual	int GetOnlineServerList(_ns1__GetOnlineServerList *ns1__GetOnlineServerList, _ns1__GetOnlineServerListResponse *ns1__GetOnlineServerListResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetOnlineUserCount' (returns error code or SOAP_OK)
	virtual	int GetOnlineUserCount(_ns1__GetOnlineUserCount *ns1__GetOnlineUserCount, _ns1__GetOnlineUserCountResponse *ns1__GetOnlineUserCountResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetSupportedProductList' (returns error code or SOAP_OK)
	virtual	int GetSupportedProductList(_ns1__GetSupportedProductList *ns1__GetSupportedProductList, _ns1__GetSupportedProductListResponse *ns1__GetSupportedProductListResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'LookupServerByModule' (returns error code or SOAP_OK)
	virtual	int LookupServerByModule(_ns1__LookupServerByModule *ns1__LookupServerByModule, _ns1__LookupServerByModuleResponse *ns1__LookupServerByModuleResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'RegisterPendingServers' (returns error code or SOAP_OK)
	virtual	int RegisterPendingServers(_ns1__RegisterPendingServers *ns1__RegisterPendingServers, _ns1__RegisterPendingServersResponse *ns1__RegisterPendingServersResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'LookupServerByGameType' (returns error code or SOAP_OK)
	virtual	int LookupServerByGameType(_ns1__LookupServerByGameType *ns1__LookupServerByGameType, _ns1__LookupServerByGameTypeResponse *ns1__LookupServerByGameTypeResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetClientExtensionUpdate' (returns error code or SOAP_OK)
	virtual	int GetClientExtensionUpdate(_ns1__GetClientExtensionUpdate *ns1__GetClientExtensionUpdate, _ns1__GetClientExtensionUpdateResponse *ns1__GetClientExtensionUpdateResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'LookupServerByGameTypeClientExtension' (returns error code or SOAP_OK)
	virtual	int LookupServerByGameTypeClientExtension(_ns1__LookupServerByGameTypeClientExtension *ns1__LookupServerByGameTypeClientExtension, _ns1__LookupServerByGameTypeClientExtensionResponse *ns1__LookupServerByGameTypeClientExtensionResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'IncrementStatistic' (returns error code or SOAP_OK)
	virtual	int IncrementStatistic(_ns1__IncrementStatistic *ns1__IncrementStatistic, _ns1__IncrementStatisticResponse *ns1__IncrementStatisticResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'LookupServerByName' (returns error code or SOAP_OK)
	virtual	int LookupServerByName_(_ns1__LookupServerByName *ns1__LookupServerByName, _ns1__LookupServerByNameResponse *ns1__LookupServerByNameResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'LookupServerByAddress' (returns error code or SOAP_OK)
	virtual	int LookupServerByAddress_(_ns1__LookupServerByAddress *ns1__LookupServerByAddress, _ns1__LookupServerByAddressResponse *ns1__LookupServerByAddressResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetOnlineServerList' (returns error code or SOAP_OK)
	virtual	int GetOnlineServerList_(_ns1__GetOnlineServerList *ns1__GetOnlineServerList, _ns1__GetOnlineServerListResponse *ns1__GetOnlineServerListResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetOnlineUserCount' (returns error code or SOAP_OK)
	virtual	int GetOnlineUserCount_(_ns1__GetOnlineUserCount *ns1__GetOnlineUserCount, _ns1__GetOnlineUserCountResponse *ns1__GetOnlineUserCountResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetSupportedProductList' (returns error code or SOAP_OK)
	virtual	int GetSupportedProductList_(_ns1__GetSupportedProductList *ns1__GetSupportedProductList, _ns1__GetSupportedProductListResponse *ns1__GetSupportedProductListResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'LookupServerByModule' (returns error code or SOAP_OK)
	virtual	int LookupServerByModule_(_ns1__LookupServerByModule *ns1__LookupServerByModule, _ns1__LookupServerByModuleResponse *ns1__LookupServerByModuleResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'RegisterPendingServers' (returns error code or SOAP_OK)
	virtual	int RegisterPendingServers_(_ns1__RegisterPendingServers *ns1__RegisterPendingServers, _ns1__RegisterPendingServersResponse *ns1__RegisterPendingServersResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'LookupServerByGameType' (returns error code or SOAP_OK)
	virtual	int LookupServerByGameType_(_ns1__LookupServerByGameType *ns1__LookupServerByGameType, _ns1__LookupServerByGameTypeResponse *ns1__LookupServerByGameTypeResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetClientExtensionUpdate' (returns error code or SOAP_OK)
	virtual	int GetClientExtensionUpdate_(_ns1__GetClientExtensionUpdate *ns1__GetClientExtensionUpdate, _ns1__GetClientExtensionUpdateResponse *ns1__GetClientExtensionUpdateResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'LookupServerByGameTypeClientExtension' (returns error code or SOAP_OK)
	virtual	int LookupServerByGameTypeClientExtension_(_ns1__LookupServerByGameTypeClientExtension *ns1__LookupServerByGameTypeClientExtension, _ns1__LookupServerByGameTypeClientExtensionResponse *ns1__LookupServerByGameTypeClientExtensionResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'IncrementStatistic' (returns error code or SOAP_OK)
	virtual	int IncrementStatistic_(_ns1__IncrementStatistic *ns1__IncrementStatistic, _ns1__IncrementStatisticResponse *ns1__IncrementStatisticResponse) SOAP_PURE_VIRTUAL;
};
#endif
