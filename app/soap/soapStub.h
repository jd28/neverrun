/* soapStub.h
   Generated by gSOAP 2.8.11 from NWNlist.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/
#pragma once
#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns2	"http://api.mst.valhallalegends.com/NWNMasterServerAPI/Imports"
#define SOAP_NAMESPACE_OF_ns1	"http://api.mst.valhallalegends.com/NWNMasterServerAPI"
#define SOAP_NAMESPACE_OF_ns3	"http://schemas.microsoft.com/2003/10/Serialization/"
#define SOAP_NAMESPACE_OF_ns4	"http://schemas.datacontract.org/2004/07/NWN"
#define SOAP_NAMESPACE_OF_ns5	"http://schemas.microsoft.com/2003/10/Serialization/Arrays"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20811
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_xsd__anyType
#define SOAP_TYPE_xsd__anyType (7)
/* Primitive xsd:anyType schema type: */
class SOAP_CMAC xsd__anyType
{
public:
	char *__item;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE_xsd__anyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__anyType() { xsd__anyType::soap_default(NULL); }
	virtual ~xsd__anyType() { }
};
#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (9)
/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary
{
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE_xsd__base64Binary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary() { xsd__base64Binary::soap_default(NULL); }
	virtual ~xsd__base64Binary() { }
};
#endif

#ifndef SOAP_TYPE_xsd__ID_
#define SOAP_TYPE_xsd__ID_ (16)
/* Primitive xsd:ID schema type: */
class SOAP_CMAC xsd__ID_ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_xsd__ID_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__ID_() { xsd__ID_::soap_default(NULL); }
	virtual ~xsd__ID_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__IDREF_
#define SOAP_TYPE_xsd__IDREF_ (18)
/* Primitive xsd:IDREF schema type: */
class SOAP_CMAC xsd__IDREF_ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_xsd__IDREF_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__IDREF_() { xsd__IDREF_::soap_default(NULL); }
	virtual ~xsd__IDREF_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__QName
#define SOAP_TYPE_xsd__QName (19)
/* Primitive xsd:QName schema type: */
class SOAP_CMAC xsd__QName : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_xsd__QName */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__QName() { xsd__QName::soap_default(NULL); }
	virtual ~xsd__QName() { }
};
#endif

#ifndef SOAP_TYPE_xsd__anyURI_
#define SOAP_TYPE_xsd__anyURI_ (21)
/* Primitive xsd:anyURI schema type: */
class SOAP_CMAC xsd__anyURI_ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_xsd__anyURI_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__anyURI_() { xsd__anyURI_::soap_default(NULL); }
	virtual ~xsd__anyURI_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__base64Binary_
#define SOAP_TYPE_xsd__base64Binary_ (22)
/* Primitive xsd:base64Binary schema type: */
class SOAP_CMAC xsd__base64Binary_ : public xsd__anyType
{
public:
	xsd__base64Binary __item;
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_xsd__base64Binary_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary_() { xsd__base64Binary_::soap_default(NULL); }
	virtual ~xsd__base64Binary_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (23)
/* Primitive xsd:boolean schema type: */
class SOAP_CMAC xsd__boolean : public xsd__anyType
{
public:
	bool __item;
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_xsd__boolean */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__boolean() { xsd__boolean::soap_default(NULL); }
	virtual ~xsd__boolean() { }
};
#endif

#ifndef SOAP_TYPE_xsd__byte_
#define SOAP_TYPE_xsd__byte_ (25)
/* Primitive xsd:byte schema type: */
class SOAP_CMAC xsd__byte_ : public xsd__anyType
{
public:
	char __item;
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_xsd__byte_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__byte_() { xsd__byte_::soap_default(NULL); }
	virtual ~xsd__byte_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (26)
/* Primitive xsd:dateTime schema type: */
class SOAP_CMAC xsd__dateTime : public xsd__anyType
{
public:
	time_t __item;
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE_xsd__dateTime */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__dateTime() { xsd__dateTime::soap_default(NULL); }
	virtual ~xsd__dateTime() { }
};
#endif

#ifndef SOAP_TYPE_xsd__decimal_
#define SOAP_TYPE_xsd__decimal_ (29)
/* Primitive xsd:decimal schema type: */
class SOAP_CMAC xsd__decimal_ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_xsd__decimal_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__decimal_() { xsd__decimal_::soap_default(NULL); }
	virtual ~xsd__decimal_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (30)
/* Primitive xsd:double schema type: */
class SOAP_CMAC xsd__double : public xsd__anyType
{
public:
	double __item;
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE_xsd__double */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__double() { xsd__double::soap_default(NULL); }
	virtual ~xsd__double() { }
};
#endif

#ifndef SOAP_TYPE_xsd__duration_
#define SOAP_TYPE_xsd__duration_ (33)
/* Primitive xsd:duration schema type: */
class SOAP_CMAC xsd__duration_ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE_xsd__duration_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__duration_() { xsd__duration_::soap_default(NULL); }
	virtual ~xsd__duration_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__float
#define SOAP_TYPE_xsd__float (34)
/* Primitive xsd:float schema type: */
class SOAP_CMAC xsd__float : public xsd__anyType
{
public:
	float __item;
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE_xsd__float */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__float() { xsd__float::soap_default(NULL); }
	virtual ~xsd__float() { }
};
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (36)
/* Primitive xsd:int schema type: */
class SOAP_CMAC xsd__int : public xsd__anyType
{
public:
	int __item;
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE_xsd__int */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__int() { xsd__int::soap_default(NULL); }
	virtual ~xsd__int() { }
};
#endif

#ifndef SOAP_TYPE_xsd__long
#define SOAP_TYPE_xsd__long (37)
/* Primitive xsd:long schema type: */
class SOAP_CMAC xsd__long : public xsd__anyType
{
public:
	LONG64 __item;
public:
	virtual int soap_type() const { return 37; } /* = unique id SOAP_TYPE_xsd__long */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__long() { xsd__long::soap_default(NULL); }
	virtual ~xsd__long() { }
};
#endif

#ifndef SOAP_TYPE_xsd__short
#define SOAP_TYPE_xsd__short (39)
/* Primitive xsd:short schema type: */
class SOAP_CMAC xsd__short : public xsd__anyType
{
public:
	short __item;
public:
	virtual int soap_type() const { return 39; } /* = unique id SOAP_TYPE_xsd__short */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__short() { xsd__short::soap_default(NULL); }
	virtual ~xsd__short() { }
};
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (41)
/* Primitive xsd:string schema type: */
class SOAP_CMAC xsd__string : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 41; } /* = unique id SOAP_TYPE_xsd__string */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__string() { xsd__string::soap_default(NULL); }
	virtual ~xsd__string() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedByte_
#define SOAP_TYPE_xsd__unsignedByte_ (42)
/* Primitive xsd:unsignedByte schema type: */
class SOAP_CMAC xsd__unsignedByte_ : public xsd__anyType
{
public:
	unsigned char __item;
public:
	virtual int soap_type() const { return 42; } /* = unique id SOAP_TYPE_xsd__unsignedByte_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedByte_() { xsd__unsignedByte_::soap_default(NULL); }
	virtual ~xsd__unsignedByte_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedInt
#define SOAP_TYPE_xsd__unsignedInt (43)
/* Primitive xsd:unsignedInt schema type: */
class SOAP_CMAC xsd__unsignedInt : public xsd__anyType
{
public:
	unsigned int __item;
public:
	virtual int soap_type() const { return 43; } /* = unique id SOAP_TYPE_xsd__unsignedInt */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedInt() { xsd__unsignedInt::soap_default(NULL); }
	virtual ~xsd__unsignedInt() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedLong
#define SOAP_TYPE_xsd__unsignedLong (44)
/* Primitive xsd:unsignedLong schema type: */
class SOAP_CMAC xsd__unsignedLong : public xsd__anyType
{
public:
	ULONG64 __item;
public:
	virtual int soap_type() const { return 44; } /* = unique id SOAP_TYPE_xsd__unsignedLong */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedLong() { xsd__unsignedLong::soap_default(NULL); }
	virtual ~xsd__unsignedLong() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedShort
#define SOAP_TYPE_xsd__unsignedShort (46)
/* Primitive xsd:unsignedShort schema type: */
class SOAP_CMAC xsd__unsignedShort : public xsd__anyType
{
public:
	unsigned short __item;
public:
	virtual int soap_type() const { return 46; } /* = unique id SOAP_TYPE_xsd__unsignedShort */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedShort() { xsd__unsignedShort::soap_default(NULL); }
	virtual ~xsd__unsignedShort() { }
};
#endif

#ifndef SOAP_TYPE_ns3__char__
#define SOAP_TYPE_ns3__char__ (75)
/* Primitive ns3:char schema type: */
class SOAP_CMAC ns3__char__ : public xsd__anyType
{
public:
	int __item;
public:
	virtual int soap_type() const { return 75; } /* = unique id SOAP_TYPE_ns3__char__ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__char__() { ns3__char__::soap_default(NULL); }
	virtual ~ns3__char__() { }
};
#endif

#ifndef SOAP_TYPE_ns3__duration__
#define SOAP_TYPE_ns3__duration__ (77)
/* Primitive ns3:duration schema type: */
class SOAP_CMAC ns3__duration__ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 77; } /* = unique id SOAP_TYPE_ns3__duration__ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__duration__() { ns3__duration__::soap_default(NULL); }
	virtual ~ns3__duration__() { }
};
#endif

#ifndef SOAP_TYPE_ns3__guid__
#define SOAP_TYPE_ns3__guid__ (79)
/* Primitive ns3:guid schema type: */
class SOAP_CMAC ns3__guid__ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 79; } /* = unique id SOAP_TYPE_ns3__guid__ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__guid__() { ns3__guid__::soap_default(NULL); }
	virtual ~ns3__guid__() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LookupServerByName
#define SOAP_TYPE__ns1__LookupServerByName (48)
/* ns1:LookupServerByName */
class SOAP_CMAC _ns1__LookupServerByName
{
public:
	char *Product;	/* optional element of type xsd:string */
	char *ServerName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 48; } /* = unique id SOAP_TYPE__ns1__LookupServerByName */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LookupServerByName() { _ns1__LookupServerByName::soap_default(NULL); }
	virtual ~_ns1__LookupServerByName() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LookupServerByNameResponse
#define SOAP_TYPE__ns1__LookupServerByNameResponse (49)
/* ns1:LookupServerByNameResponse */
class SOAP_CMAC _ns1__LookupServerByNameResponse
{
public:
	class ns4__ArrayOfNWGameServer *LookupServerByNameResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:ArrayOfNWGameServer */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE__ns1__LookupServerByNameResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LookupServerByNameResponse() { _ns1__LookupServerByNameResponse::soap_default(NULL); }
	virtual ~_ns1__LookupServerByNameResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LookupServerByAddress
#define SOAP_TYPE__ns1__LookupServerByAddress (50)
/* ns1:LookupServerByAddress */
class SOAP_CMAC _ns1__LookupServerByAddress
{
public:
	char *Product;	/* optional element of type xsd:string */
	char *ServerAddress;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 50; } /* = unique id SOAP_TYPE__ns1__LookupServerByAddress */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LookupServerByAddress() { _ns1__LookupServerByAddress::soap_default(NULL); }
	virtual ~_ns1__LookupServerByAddress() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LookupServerByAddressResponse
#define SOAP_TYPE__ns1__LookupServerByAddressResponse (51)
/* ns1:LookupServerByAddressResponse */
class SOAP_CMAC _ns1__LookupServerByAddressResponse
{
public:
	class ns4__NWGameServer *LookupServerByAddressResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:NWGameServer */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 51; } /* = unique id SOAP_TYPE__ns1__LookupServerByAddressResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LookupServerByAddressResponse() { _ns1__LookupServerByAddressResponse::soap_default(NULL); }
	virtual ~_ns1__LookupServerByAddressResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetOnlineServerList
#define SOAP_TYPE__ns1__GetOnlineServerList (52)
/* ns1:GetOnlineServerList */
class SOAP_CMAC _ns1__GetOnlineServerList
{
public:
	char *Product;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 52; } /* = unique id SOAP_TYPE__ns1__GetOnlineServerList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetOnlineServerList() { _ns1__GetOnlineServerList::soap_default(NULL); }
	virtual ~_ns1__GetOnlineServerList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetOnlineServerListResponse
#define SOAP_TYPE__ns1__GetOnlineServerListResponse (53)
/* ns1:GetOnlineServerListResponse */
class SOAP_CMAC _ns1__GetOnlineServerListResponse
{
public:
	ns4__ArrayOfNWGameServer *GetOnlineServerListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:ArrayOfNWGameServer */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE__ns1__GetOnlineServerListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetOnlineServerListResponse() { _ns1__GetOnlineServerListResponse::soap_default(NULL); }
	virtual ~_ns1__GetOnlineServerListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetOnlineUserCount
#define SOAP_TYPE__ns1__GetOnlineUserCount (54)
/* ns1:GetOnlineUserCount */
class SOAP_CMAC _ns1__GetOnlineUserCount
{
public:
	char *Product;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 54; } /* = unique id SOAP_TYPE__ns1__GetOnlineUserCount */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetOnlineUserCount() { _ns1__GetOnlineUserCount::soap_default(NULL); }
	virtual ~_ns1__GetOnlineUserCount() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetOnlineUserCountResponse
#define SOAP_TYPE__ns1__GetOnlineUserCountResponse (55)
/* ns1:GetOnlineUserCountResponse */
class SOAP_CMAC _ns1__GetOnlineUserCountResponse
{
public:
	unsigned int *GetOnlineUserCountResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:unsignedInt */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 55; } /* = unique id SOAP_TYPE__ns1__GetOnlineUserCountResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetOnlineUserCountResponse() { _ns1__GetOnlineUserCountResponse::soap_default(NULL); }
	virtual ~_ns1__GetOnlineUserCountResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSupportedProductList
#define SOAP_TYPE__ns1__GetSupportedProductList (56)
/* ns1:GetSupportedProductList */
class SOAP_CMAC _ns1__GetSupportedProductList
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 56; } /* = unique id SOAP_TYPE__ns1__GetSupportedProductList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSupportedProductList() { _ns1__GetSupportedProductList::soap_default(NULL); }
	virtual ~_ns1__GetSupportedProductList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSupportedProductListResponse
#define SOAP_TYPE__ns1__GetSupportedProductListResponse (57)
/* ns1:GetSupportedProductListResponse */
class SOAP_CMAC _ns1__GetSupportedProductListResponse
{
public:
	class ns5__ArrayOfstring *GetSupportedProductListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns5:ArrayOfstring */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 57; } /* = unique id SOAP_TYPE__ns1__GetSupportedProductListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSupportedProductListResponse() { _ns1__GetSupportedProductListResponse::soap_default(NULL); }
	virtual ~_ns1__GetSupportedProductListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LookupServerByModule
#define SOAP_TYPE__ns1__LookupServerByModule (58)
/* ns1:LookupServerByModule */
class SOAP_CMAC _ns1__LookupServerByModule
{
public:
	char *Product;	/* optional element of type xsd:string */
	char *Module;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 58; } /* = unique id SOAP_TYPE__ns1__LookupServerByModule */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LookupServerByModule() { _ns1__LookupServerByModule::soap_default(NULL); }
	virtual ~_ns1__LookupServerByModule() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LookupServerByModuleResponse
#define SOAP_TYPE__ns1__LookupServerByModuleResponse (59)
/* ns1:LookupServerByModuleResponse */
class SOAP_CMAC _ns1__LookupServerByModuleResponse
{
public:
	ns4__ArrayOfNWGameServer *LookupServerByModuleResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:ArrayOfNWGameServer */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 59; } /* = unique id SOAP_TYPE__ns1__LookupServerByModuleResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LookupServerByModuleResponse() { _ns1__LookupServerByModuleResponse::soap_default(NULL); }
	virtual ~_ns1__LookupServerByModuleResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RegisterPendingServers
#define SOAP_TYPE__ns1__RegisterPendingServers (60)
/* ns1:RegisterPendingServers */
class SOAP_CMAC _ns1__RegisterPendingServers
{
public:
	char *Product;	/* optional element of type xsd:string */
	ns5__ArrayOfstring *ServerAddresses;	/* optional element of type ns5:ArrayOfstring */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 60; } /* = unique id SOAP_TYPE__ns1__RegisterPendingServers */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RegisterPendingServers() { _ns1__RegisterPendingServers::soap_default(NULL); }
	virtual ~_ns1__RegisterPendingServers() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RegisterPendingServersResponse
#define SOAP_TYPE__ns1__RegisterPendingServersResponse (61)
/* ns1:RegisterPendingServersResponse */
class SOAP_CMAC _ns1__RegisterPendingServersResponse
{
public:
	unsigned int *RegisterPendingServersResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:unsignedInt */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 61; } /* = unique id SOAP_TYPE__ns1__RegisterPendingServersResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RegisterPendingServersResponse() { _ns1__RegisterPendingServersResponse::soap_default(NULL); }
	virtual ~_ns1__RegisterPendingServersResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LookupServerByGameType
#define SOAP_TYPE__ns1__LookupServerByGameType (62)
/* ns1:LookupServerByGameType */
class SOAP_CMAC _ns1__LookupServerByGameType
{
public:
	char *Product;	/* optional element of type xsd:string */
	unsigned int *GameType;	/* optional element of type xsd:unsignedInt */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 62; } /* = unique id SOAP_TYPE__ns1__LookupServerByGameType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LookupServerByGameType() { _ns1__LookupServerByGameType::soap_default(NULL); }
	virtual ~_ns1__LookupServerByGameType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LookupServerByGameTypeResponse
#define SOAP_TYPE__ns1__LookupServerByGameTypeResponse (63)
/* ns1:LookupServerByGameTypeResponse */
class SOAP_CMAC _ns1__LookupServerByGameTypeResponse
{
public:
	ns4__ArrayOfNWGameServer *LookupServerByGameTypeResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:ArrayOfNWGameServer */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 63; } /* = unique id SOAP_TYPE__ns1__LookupServerByGameTypeResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LookupServerByGameTypeResponse() { _ns1__LookupServerByGameTypeResponse::soap_default(NULL); }
	virtual ~_ns1__LookupServerByGameTypeResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetClientExtensionUpdate
#define SOAP_TYPE__ns1__GetClientExtensionUpdate (64)
/* ns1:GetClientExtensionUpdate */
class SOAP_CMAC _ns1__GetClientExtensionUpdate
{
public:
	char *Product;	/* optional element of type xsd:string */
	unsigned int *ClientExtensionVersion;	/* optional element of type xsd:unsignedInt */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 64; } /* = unique id SOAP_TYPE__ns1__GetClientExtensionUpdate */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetClientExtensionUpdate() { _ns1__GetClientExtensionUpdate::soap_default(NULL); }
	virtual ~_ns1__GetClientExtensionUpdate() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetClientExtensionUpdateResponse
#define SOAP_TYPE__ns1__GetClientExtensionUpdateResponse (65)
/* ns1:GetClientExtensionUpdateResponse */
class SOAP_CMAC _ns1__GetClientExtensionUpdateResponse
{
public:
	class ns4__ClientExtensionUpdate *GetClientExtensionUpdateResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:ClientExtensionUpdate */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 65; } /* = unique id SOAP_TYPE__ns1__GetClientExtensionUpdateResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetClientExtensionUpdateResponse() { _ns1__GetClientExtensionUpdateResponse::soap_default(NULL); }
	virtual ~_ns1__GetClientExtensionUpdateResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LookupServerByGameTypeClientExtension
#define SOAP_TYPE__ns1__LookupServerByGameTypeClientExtension (66)
/* ns1:LookupServerByGameTypeClientExtension */
class SOAP_CMAC _ns1__LookupServerByGameTypeClientExtension
{
public:
	char *Product;	/* optional element of type xsd:string */
	unsigned int *GameType;	/* optional element of type xsd:unsignedInt */
	unsigned int *ClientExtensionVersion;	/* optional element of type xsd:unsignedInt */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 66; } /* = unique id SOAP_TYPE__ns1__LookupServerByGameTypeClientExtension */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LookupServerByGameTypeClientExtension() { _ns1__LookupServerByGameTypeClientExtension::soap_default(NULL); }
	virtual ~_ns1__LookupServerByGameTypeClientExtension() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LookupServerByGameTypeClientExtensionResponse
#define SOAP_TYPE__ns1__LookupServerByGameTypeClientExtensionResponse (67)
/* ns1:LookupServerByGameTypeClientExtensionResponse */
class SOAP_CMAC _ns1__LookupServerByGameTypeClientExtensionResponse
{
public:
	ns4__ArrayOfNWGameServer *LookupServerByGameTypeClientExtensionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:ArrayOfNWGameServer */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 67; } /* = unique id SOAP_TYPE__ns1__LookupServerByGameTypeClientExtensionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LookupServerByGameTypeClientExtensionResponse() { _ns1__LookupServerByGameTypeClientExtensionResponse::soap_default(NULL); }
	virtual ~_ns1__LookupServerByGameTypeClientExtensionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__IncrementStatistic
#define SOAP_TYPE__ns1__IncrementStatistic (68)
/* ns1:IncrementStatistic */
class SOAP_CMAC _ns1__IncrementStatistic
{
public:
	char *Product;	/* optional element of type xsd:string */
	char *Statistic;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 68; } /* = unique id SOAP_TYPE__ns1__IncrementStatistic */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__IncrementStatistic() { _ns1__IncrementStatistic::soap_default(NULL); }
	virtual ~_ns1__IncrementStatistic() { }
};
#endif

#ifndef SOAP_TYPE__ns1__IncrementStatisticResponse
#define SOAP_TYPE__ns1__IncrementStatisticResponse (69)
/* ns1:IncrementStatisticResponse */
class SOAP_CMAC _ns1__IncrementStatisticResponse
{
public:
	unsigned int *IncrementStatisticResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:unsignedInt */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 69; } /* = unique id SOAP_TYPE__ns1__IncrementStatisticResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__IncrementStatisticResponse() { _ns1__IncrementStatisticResponse::soap_default(NULL); }
	virtual ~_ns1__IncrementStatisticResponse() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ArrayOfNWGameServer
#define SOAP_TYPE_ns4__ArrayOfNWGameServer (70)
/* ns4:ArrayOfNWGameServer */
class SOAP_CMAC ns4__ArrayOfNWGameServer : public xsd__anyType
{
public:
	int __sizeNWGameServer;	/* sequence of elements <NWGameServer> */
	ns4__NWGameServer **NWGameServer;	/* optional element of type ns4:NWGameServer */
public:
	virtual int soap_type() const { return 70; } /* = unique id SOAP_TYPE_ns4__ArrayOfNWGameServer */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ArrayOfNWGameServer() { ns4__ArrayOfNWGameServer::soap_default(NULL); }
	virtual ~ns4__ArrayOfNWGameServer() { }
};
#endif

#ifndef SOAP_TYPE_ns4__NWGameServer
#define SOAP_TYPE_ns4__NWGameServer (71)
/* ns4:NWGameServer */
class SOAP_CMAC ns4__NWGameServer : public xsd__anyType
{
public:
	unsigned int *ActivePlayerCount;	/* optional element of type xsd:unsignedInt */
	unsigned int *BuildNumber;	/* optional element of type xsd:unsignedInt */
	bool *ELCEnforced;	/* optional element of type xsd:boolean */
	unsigned int *ExpansionsMask;	/* optional element of type xsd:unsignedInt */
	unsigned int *GameType;	/* optional element of type xsd:unsignedInt */
	bool *ILREnforced;	/* optional element of type xsd:boolean */
	time_t *LastHeartbeat;	/* optional element of type xsd:dateTime */
	bool *LocalVault;	/* optional element of type xsd:boolean */
	unsigned int *MaximumLevel;	/* optional element of type xsd:unsignedInt */
	unsigned int *MaximumPlayerCount;	/* optional element of type xsd:unsignedInt */
	unsigned int *MinimumLevel;	/* optional element of type xsd:unsignedInt */
	char *ModuleDescription;	/* optional element of type xsd:string */
	char *ModuleName;	/* optional element of type xsd:string */
	char *ModuleUrl;	/* optional element of type xsd:string */
	bool *OnePartyOnly;	/* optional element of type xsd:boolean */
	bool *Online;	/* optional element of type xsd:boolean */
	unsigned int *PVPLevel;	/* optional element of type xsd:unsignedInt */
	char *PWCUrl;	/* optional element of type xsd:string */
	bool *PlayerPause;	/* optional element of type xsd:boolean */
	bool *PrivateServer;	/* optional element of type xsd:boolean */
	char *Product;	/* optional element of type xsd:string */
	char *ServerAddress;	/* optional element of type xsd:string */
	char *ServerDescription;	/* optional element of type xsd:string */
	char *ServerName;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 71; } /* = unique id SOAP_TYPE_ns4__NWGameServer */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__NWGameServer() { ns4__NWGameServer::soap_default(NULL); }
	virtual ~ns4__NWGameServer() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ClientExtensionUpdate
#define SOAP_TYPE_ns4__ClientExtensionUpdate (72)
/* ns4:ClientExtensionUpdate */
class SOAP_CMAC ns4__ClientExtensionUpdate : public xsd__anyType
{
public:
	char *InfoUrl;	/* optional element of type xsd:string */
	char *MOTD;	/* optional element of type xsd:string */
	char *UpdateDescription;	/* optional element of type xsd:string */
	char *UpdateUrl;	/* optional element of type xsd:string */
	char *UpdateVersion;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 72; } /* = unique id SOAP_TYPE_ns4__ClientExtensionUpdate */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ClientExtensionUpdate() { ns4__ClientExtensionUpdate::soap_default(NULL); }
	virtual ~ns4__ClientExtensionUpdate() { }
};
#endif

#ifndef SOAP_TYPE_ns5__ArrayOfstring
#define SOAP_TYPE_ns5__ArrayOfstring (73)
/* ns5:ArrayOfstring */
class SOAP_CMAC ns5__ArrayOfstring : public xsd__anyType
{
public:
	int __sizestring;	/* sequence of elements <string> */
	char **string;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 73; } /* = unique id SOAP_TYPE_ns5__ArrayOfstring */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns5__ArrayOfstring() { ns5__ArrayOfstring::soap_default(NULL); }
	virtual ~ns5__ArrayOfstring() { }
};
#endif

#ifndef SOAP_TYPE___ns6__LookupServerByName
#define SOAP_TYPE___ns6__LookupServerByName (92)
/* Operation wrapper: */
struct __ns6__LookupServerByName
{
public:
	_ns1__LookupServerByName *ns1__LookupServerByName;	/* optional element of type ns1:LookupServerByName */
};
#endif

#ifndef SOAP_TYPE___ns6__LookupServerByAddress
#define SOAP_TYPE___ns6__LookupServerByAddress (96)
/* Operation wrapper: */
struct __ns6__LookupServerByAddress
{
public:
	_ns1__LookupServerByAddress *ns1__LookupServerByAddress;	/* optional element of type ns1:LookupServerByAddress */
};
#endif

#ifndef SOAP_TYPE___ns6__GetOnlineServerList
#define SOAP_TYPE___ns6__GetOnlineServerList (100)
/* Operation wrapper: */
struct __ns6__GetOnlineServerList
{
public:
	_ns1__GetOnlineServerList *ns1__GetOnlineServerList;	/* optional element of type ns1:GetOnlineServerList */
};
#endif

#ifndef SOAP_TYPE___ns6__GetOnlineUserCount
#define SOAP_TYPE___ns6__GetOnlineUserCount (104)
/* Operation wrapper: */
struct __ns6__GetOnlineUserCount
{
public:
	_ns1__GetOnlineUserCount *ns1__GetOnlineUserCount;	/* optional element of type ns1:GetOnlineUserCount */
};
#endif

#ifndef SOAP_TYPE___ns6__GetSupportedProductList
#define SOAP_TYPE___ns6__GetSupportedProductList (108)
/* Operation wrapper: */
struct __ns6__GetSupportedProductList
{
public:
	_ns1__GetSupportedProductList *ns1__GetSupportedProductList;	/* optional element of type ns1:GetSupportedProductList */
};
#endif

#ifndef SOAP_TYPE___ns6__LookupServerByModule
#define SOAP_TYPE___ns6__LookupServerByModule (112)
/* Operation wrapper: */
struct __ns6__LookupServerByModule
{
public:
	_ns1__LookupServerByModule *ns1__LookupServerByModule;	/* optional element of type ns1:LookupServerByModule */
};
#endif

#ifndef SOAP_TYPE___ns6__RegisterPendingServers
#define SOAP_TYPE___ns6__RegisterPendingServers (116)
/* Operation wrapper: */
struct __ns6__RegisterPendingServers
{
public:
	_ns1__RegisterPendingServers *ns1__RegisterPendingServers;	/* optional element of type ns1:RegisterPendingServers */
};
#endif

#ifndef SOAP_TYPE___ns6__LookupServerByGameType
#define SOAP_TYPE___ns6__LookupServerByGameType (120)
/* Operation wrapper: */
struct __ns6__LookupServerByGameType
{
public:
	_ns1__LookupServerByGameType *ns1__LookupServerByGameType;	/* optional element of type ns1:LookupServerByGameType */
};
#endif

#ifndef SOAP_TYPE___ns6__GetClientExtensionUpdate
#define SOAP_TYPE___ns6__GetClientExtensionUpdate (124)
/* Operation wrapper: */
struct __ns6__GetClientExtensionUpdate
{
public:
	_ns1__GetClientExtensionUpdate *ns1__GetClientExtensionUpdate;	/* optional element of type ns1:GetClientExtensionUpdate */
};
#endif

#ifndef SOAP_TYPE___ns6__LookupServerByGameTypeClientExtension
#define SOAP_TYPE___ns6__LookupServerByGameTypeClientExtension (128)
/* Operation wrapper: */
struct __ns6__LookupServerByGameTypeClientExtension
{
public:
	_ns1__LookupServerByGameTypeClientExtension *ns1__LookupServerByGameTypeClientExtension;	/* optional element of type ns1:LookupServerByGameTypeClientExtension */
};
#endif

#ifndef SOAP_TYPE___ns6__IncrementStatistic
#define SOAP_TYPE___ns6__IncrementStatistic (132)
/* Operation wrapper: */
struct __ns6__IncrementStatistic
{
public:
	_ns1__IncrementStatistic *ns1__IncrementStatistic;	/* optional element of type ns1:IncrementStatistic */
};
#endif

#ifndef SOAP_TYPE___ns6__LookupServerByName_
#define SOAP_TYPE___ns6__LookupServerByName_ (134)
/* Operation wrapper: */
struct __ns6__LookupServerByName_
{
public:
	_ns1__LookupServerByName *ns1__LookupServerByName;	/* optional element of type ns1:LookupServerByName */
};
#endif

#ifndef SOAP_TYPE___ns6__LookupServerByAddress_
#define SOAP_TYPE___ns6__LookupServerByAddress_ (136)
/* Operation wrapper: */
struct __ns6__LookupServerByAddress_
{
public:
	_ns1__LookupServerByAddress *ns1__LookupServerByAddress;	/* optional element of type ns1:LookupServerByAddress */
};
#endif

#ifndef SOAP_TYPE___ns6__GetOnlineServerList_
#define SOAP_TYPE___ns6__GetOnlineServerList_ (138)
/* Operation wrapper: */
struct __ns6__GetOnlineServerList_
{
public:
	_ns1__GetOnlineServerList *ns1__GetOnlineServerList;	/* optional element of type ns1:GetOnlineServerList */
};
#endif

#ifndef SOAP_TYPE___ns6__GetOnlineUserCount_
#define SOAP_TYPE___ns6__GetOnlineUserCount_ (140)
/* Operation wrapper: */
struct __ns6__GetOnlineUserCount_
{
public:
	_ns1__GetOnlineUserCount *ns1__GetOnlineUserCount;	/* optional element of type ns1:GetOnlineUserCount */
};
#endif

#ifndef SOAP_TYPE___ns6__GetSupportedProductList_
#define SOAP_TYPE___ns6__GetSupportedProductList_ (142)
/* Operation wrapper: */
struct __ns6__GetSupportedProductList_
{
public:
	_ns1__GetSupportedProductList *ns1__GetSupportedProductList;	/* optional element of type ns1:GetSupportedProductList */
};
#endif

#ifndef SOAP_TYPE___ns6__LookupServerByModule_
#define SOAP_TYPE___ns6__LookupServerByModule_ (144)
/* Operation wrapper: */
struct __ns6__LookupServerByModule_
{
public:
	_ns1__LookupServerByModule *ns1__LookupServerByModule;	/* optional element of type ns1:LookupServerByModule */
};
#endif

#ifndef SOAP_TYPE___ns6__RegisterPendingServers_
#define SOAP_TYPE___ns6__RegisterPendingServers_ (146)
/* Operation wrapper: */
struct __ns6__RegisterPendingServers_
{
public:
	_ns1__RegisterPendingServers *ns1__RegisterPendingServers;	/* optional element of type ns1:RegisterPendingServers */
};
#endif

#ifndef SOAP_TYPE___ns6__LookupServerByGameType_
#define SOAP_TYPE___ns6__LookupServerByGameType_ (148)
/* Operation wrapper: */
struct __ns6__LookupServerByGameType_
{
public:
	_ns1__LookupServerByGameType *ns1__LookupServerByGameType;	/* optional element of type ns1:LookupServerByGameType */
};
#endif

#ifndef SOAP_TYPE___ns6__GetClientExtensionUpdate_
#define SOAP_TYPE___ns6__GetClientExtensionUpdate_ (150)
/* Operation wrapper: */
struct __ns6__GetClientExtensionUpdate_
{
public:
	_ns1__GetClientExtensionUpdate *ns1__GetClientExtensionUpdate;	/* optional element of type ns1:GetClientExtensionUpdate */
};
#endif

#ifndef SOAP_TYPE___ns6__LookupServerByGameTypeClientExtension_
#define SOAP_TYPE___ns6__LookupServerByGameTypeClientExtension_ (152)
/* Operation wrapper: */
struct __ns6__LookupServerByGameTypeClientExtension_
{
public:
	_ns1__LookupServerByGameTypeClientExtension *ns1__LookupServerByGameTypeClientExtension;	/* optional element of type ns1:LookupServerByGameTypeClientExtension */
};
#endif

#ifndef SOAP_TYPE___ns6__IncrementStatistic_
#define SOAP_TYPE___ns6__IncrementStatistic_ (154)
/* Operation wrapper: */
struct __ns6__IncrementStatistic_
{
public:
	_ns1__IncrementStatistic *ns1__IncrementStatistic;	/* optional element of type ns1:IncrementStatistic */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (155)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (156)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (158)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (161)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (162)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__byte
#define SOAP_TYPE_xsd__byte (13)
typedef char xsd__byte;
#endif

#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (14)
typedef unsigned char xsd__unsignedByte;
#endif

#ifndef SOAP_TYPE_xsd__ID
#define SOAP_TYPE_xsd__ID (15)
typedef char *xsd__ID;
#endif

#ifndef SOAP_TYPE_xsd__IDREF
#define SOAP_TYPE_xsd__IDREF (17)
typedef char *xsd__IDREF;
#endif

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (20)
typedef char *xsd__anyURI;
#endif

#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (28)
typedef char *xsd__decimal;
#endif

#ifndef SOAP_TYPE_xsd__duration
#define SOAP_TYPE_xsd__duration (32)
typedef char *xsd__duration;
#endif

#ifndef SOAP_TYPE_ns3__char
#define SOAP_TYPE_ns3__char (74)
typedef int ns3__char;
#endif

#ifndef SOAP_TYPE_ns3__duration
#define SOAP_TYPE_ns3__duration (76)
typedef char *ns3__duration;
#endif

#ifndef SOAP_TYPE_ns3__guid
#define SOAP_TYPE_ns3__guid (78)
typedef char *ns3__guid;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
